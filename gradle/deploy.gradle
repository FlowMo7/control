apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def artifact = new Properties()
artifact.load(new FileInputStream("$project.name/gradle.properties"))

group = Config.group

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId Config.group
            artifactId artifact.id

            name Config.name
            description Config.description
            url Config.webUrl

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
            developers {
                developer {
                    id "flosch"
                    name "Florian Schuster"
                    email "mail@florianschuster.at"
                }
            }
            scm {
                connection Config.gitUrl
                developerConnection Config.gitUrl
                url Config.webUrl
            }
        }
        pom.withXml {
            def dependenciesNode = asNode().appendNode('dependencies')
            configurations.api.allDependencies.withType(ModuleDependency) { ModuleDependency dp ->
                def dependencyNode = dependenciesNode.appendNode('dependency')
                dependencyNode.appendNode('groupId', dp.group)
                dependencyNode.appendNode('artifactId', dp.name)
                dependencyNode.appendNode('version', dp.version)
            }
        }
    }
}

version = Config.version

if (project.hasProperty("kotlin")) {
    task sourcesJar(type: Jar) {
        archiveClassifier.set("sources")
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc, dependsOn: dokka) {
    }
} else if (project.hasProperty("android")) {
    task sourcesJar(type: Jar) {
        archiveClassifier.set("sources")
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_KEY")
    configurations = ["archives"]
    pkg {
        repo = Config.name
        name = artifact.id
        publish = true
    }
}